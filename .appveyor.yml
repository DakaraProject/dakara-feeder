version: 1.7.0-dev-{build}

image:
  - Ubuntu
  - Visual Studio 2019

build: false

# restrict to branches
branches:
  only:
    - master
    - develop

environment:
  # setup tests matrix
  matrix:
    - PYTHON: "3.6"
    - PYTHON: "3.7"
    - PYTHON: "3.8"
    - PYTHON: "3.9"

# check current python version
init:
  - "py -%PYTHON% --version"

for:
  - matrix:
      only:
        - image: Ubuntu

    cache:
      # enable cache for Python dependencies
      - "$HOME/.cache/pip"

    init:
      # load virtual env
      - "source $HOME/venv$PYTHON/bin/activate"

      # check current python version
      - "python --version"

    install:
      # install system dependencies
      - "sudo apt-get -qq update"
      - "sudo apt-get install -y ffmpeg mediainfo"

      # the features used in setup.cfg require a recent enough version of setuptools
      - "python -m pip install --upgrade \"setuptools>=40.0\""

      # install dependencies for test
      - "python -m pip install -e \".[tests]\""

      # check version of dependencies
      - "ffprobe -version"
      - "mediainfo --version"

    test_script:
      # run tests
      - "python -m coverage run -m pytest -v"

      # run commands
      - "python -m dakara_feeder --version"
      - "dakara-feed --version"

      # run code formatting tests
      - "python -m black . --check"
      - "python -m flake8"

    after_test:
      # show coverage stats
      - "python -m coverage report -m"

      # upload coverage stats to codecov.io
      # codecov token is stored in appveyor settings
      - "python -m coverage xml"
      - "python -m codecov -X gcov --file coverage.xml"

  - matrix:
      only:
        - image: Visual Studio 2019

    cache:
      # enable cache for Python dependencies
      - "%LOCALAPPDATA%\\pip\\Cache"

    init:
      # check current python version
      - "py -%PYTHON% --version"

    install:
      # install system dependencies
      - "cinst ffmpeg mediainfo"

      # the features used in setup.cfg require a recent enough version of setuptools
      - "py -%PYTHON% -m pip install --upgrade \"setuptools>=40.0\""

      # install dependencies for test
      - "py -%PYTHON% -m pip install -e \".[tests]\""

    test_script:
      # run tests
      - "py -%PYTHON% -m coverage run -m pytest -v"

      # run commands
      - "py -%PYTHON% -m dakara_feeder --version"

      # run code formatting tests
      - "py -%PYTHON% -m black . --check"
      - "py -%PYTHON% -m flake8"

    after_test:
      # show coverage stats
      - "py -%PYTHON% -m coverage report -m"

      # upload coverage stats to codecov.io
      # codecov token is stored in appveyor settings
      - "py -%PYTHON% -m coverage xml"
      - "py -%PYTHON% -m codecov -X gcov --file coverage.xml"
